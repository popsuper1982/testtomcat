<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.apress.prospring3.springblog.persistence.EntryMapper">

    <resultMap type="Entry" id="entryResultMap">
        <id property="id" column="id" />
        <result property="subject" column="subject"/>
        <result property="body" column="body"/>
        <result property="postDate" column="post_date"/>
        <result property="categoryId" column="category_id"/>
        <result property="subCategoryId" column="sub_category_id"/>
        <result property="rating" column="rating"/>
        <result property="createdBy" column="created_by"/>
        <result property="createdDate" column="created_date"/>
        <result property="lastModifiedBy" column="last_modified_by"/>
        <result property="lastModifiedDate" column="last_modified_date"/>
        <result property="version" column="version"/>        
    </resultMap>

    <select id="findAll" resultMap="entryResultMap">
        select 
            id, 
            subject, 
            body, 
            post_date,
            category_id, 
            sub_category_id, 
            created_by, 
            created_date, 
            last_modified_by, 
            last_modified_date, 
            version 
        from entry e     
    </select>

    <select id="findById" parameterType="long" resultMap="entryResultMap">
        select 
            id, 
            subject, 
            body, 
            post_date,
            category_id, 
            sub_category_id,  
            created_by, 
            created_date, 
            last_modified_by, 
            last_modified_date, 
            version 
        from entry e where e.id = #{id}       
    </select>
    
    <select id="findByCategoryId" parameterType="string" resultMap="entryResultMap">
        select 
            id, 
            subject, 
            body, 
            post_date,
            category_id, 
            sub_category_id, 
            created_by, 
            created_date, 
            last_modified_by, 
            last_modified_date, 
            version 
        from entry e where e.category_id = #{categoryId}       
    </select>
    
    <insert id="insertEntry" parameterType="Entry" useGeneratedKeys="true" keyProperty="id">
        insert into entry (subject, body, post_date, category_id, sub_category_id,
            created_by, created_date, last_modified_by, last_modified_date) 
        values (#{subject}, #{body}, #{postDate}, #{categoryId}, #{subCategoryId},
            #{createdBy}, #{createdDate}, #{lastModifiedBy}, #{lastModifiedDate})    
    </insert> 
    
    <update id="updateEntry" parameterType="Entry">
        update entry set 
            subject = #{subject}, 
            body = #{body}, 
            post_date = #{postDate}, 
            category_id = #{categoryId}, 
            sub_category_id = #{subCategoryId},
            created_by = #{createdBy}, 
            created_date = #{createdDate}, 
            last_modified_by = #{lastModifiedBy}, 
            last_modified_date = #{lastModifiedDate},
            version = version + 1 
        where id = #{id}
            and version = #{version}
    </update>     
    
    <delete id="deleteEntry" parameterType="long">
        delete from entry where id = #{id}
    </delete> 
    
    <select id="findEntryByCriteria" parameterType="SearchCriteriaPage" resultMap="entryResultMap">
        select 
            id, 
            subject, 
            body, 
            post_date,
            category_id, 
            sub_category_id, 
            created_by, 
            created_date, 
            last_modified_by, 
            last_modified_date, 
            version 
        from entry e 
        <where>
            <if test="subject != null">
                subject like #{subject}
            </if>
            <if test="categoryId != null">
                and category_id like #{categoryId}
            </if>
            <if test="fromPostDate != null">
                and post_date &gt;= #{fromPostDate}
            </if>
            <if test="toPostDate != null">
                and post_date &lt;= #{toPostDate}
            </if>                         
        </where>   
        limit #{pageSize}
        offset #{offset}        
    </select>
    
    <select id="findEntryCountByCriteria" parameterType="SearchCriteriaPage" resultType="int">
        select 
            count(*) 
        from entry e 
        <where>
            <if test="subject != null">
                subject like #{subject}
            </if>
            <if test="categoryId != null">
                and category_id like #{categoryId}
            </if>
            <if test="fromPostDate != null">
                and post_date &gt;= #{fromPostDate}
            </if>
            <if test="toPostDate != null">
                and post_date &lt;= #{toPostDate}
            </if>                         
        </where>        
    </select>                 

</mapper>
